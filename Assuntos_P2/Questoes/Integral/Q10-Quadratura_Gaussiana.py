import math


pnt_4 = [-0.33998104358485626, 0.33998104358485626, -0.8611363115940526, 0.8611363115940526]
peso_4 = [0.6521451548625461, 0.6521451548625461, 0.34785484513745385, 0.34785484513745385]

pnt_6 = [0.6612093864662645, -0.6612093864662645, -0.2386191860831969, 0.2386191860831969, -0.932469514203152, 0.932469514203152]
peso_6 = [0.3607615730481386, 0.3607615730481386, 0.46791393457269104, 0.46791393457269104, 0.17132449237917036, 0.17132449237917036]

pnt_8 = [-0.1834346424956498, 0.1834346424956498, -0.525532409916329, 0.525532409916329, -0.7966664774136267, 0.7966664774136267, -0.9602898564975363, 0.9602898564975363]
peso_8 = [0.362683783378362, 0.362683783378362, 0.31370664587788727, 0.31370664587788727, 0.22238103445337448, 0.22238103445337448, 0.10122853629037626, 0.10122853629037626]

pnt_10 = [-0.14887433898163122, 0.14887433898163122, -0.4333953941292472, 0.4333953941292472, -0.6794095682990244, 0.6794095682990244, -0.8650633666889845, 0.8650633666889845, -0.9739065285171717, 0.9739065285171717]
peso_10 = [0.29552422471475287, 0.29552422471475287, 0.26926671930999635, 0.26926671930999635, 0.21908636251598204, 0.21908636251598204, 0.1494513491505806, 0.1494513491505806, 0.06667134430868814, 0.06667134430868814]

pnt_12 = [-0.1252334085114689, 0.1252334085114689, -0.3678314989981802, 0.3678314989981802, -0.5873179542866175, 0.5873179542866175, -0.7699026741943047, 0.7699026741943047, -0.9041172563704749, 0.9041172563704749, -0.9815606342467192, 0.9815606342467192]
peso_12 = [0.24914704581340277, 0.24914704581340277, 0.2334925365383548, 0.2334925365383548, 0.20316742672306592, 0.20316742672306592, 0.16007832854334622, 0.16007832854334622, 0.10693932599531843, 0.10693932599531843, 0.04717533638651183, 0.04717533638651183]


#Coordenadas x e Pesos c para Quadratura Gaussiana
# O primeiro valor e a coordenada x e o segundo valor eh o peso
pontos = pnt_4
pesos = peso_4
pontos_e_pesos = zip(pontos, pesos)     
a,b = [ -0.857,1.207]

def f(x):
    return math.exp(-x**2)

def quadratura(f,pontos_e_pesos):
    soma = 0
    for x_k,c_k in pontos_e_pesos:
        soma += c_k * f(x_k)
    return soma

def change(f,a,b,u):
    return f( (b+a)/2 + (b-a)*u/2) * (b-a) / 2

def g(u):
    return change(f,a,b,u)

r = quadratura(g,pontos_e_pesos)
print(f'Approx = {r}')